# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  gh: circleci/github-cli@2.7.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-linux-static:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Get Dependancies"
          command: |
            sudo apt-get update
            sudo apt-get install gcc-14 g++-14 ninja-build
      - run:
          name: "Build executable"
          command: |
            cmake -Bbuild -H. -G Ninja -DCMAKE_C_COMPILER=gcc-14 -DCMAKE_CXX_COMPILER=g++-14 -DBUILD_TESTS=ON
            cd build && ninja
      - persist_to_workspace:
          root: .
          paths:
            - .
  run-tests:
    docker:
      - image: cimg/base:current
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Run tests"
          command: |
            ls -l
            cd bin
            ./lagrange-test


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    jobs:
      - build-linux-static
      - run-tests:
          requires:
            - build-linux-static
      - gh/release:
          tag: "test-ci-1"
          title: "Release << pipeline.git.tag >>"
          requires:
            - build-linux-static
            - run-tests
          context:
            - GITHUB_TOKEN
      - gh/upload:
          requires:
            - gh/release
          tag: "test-ci-1"
          files: "./bin/lagrange-ng"
          context:
            - GITHUB_TOKEN
