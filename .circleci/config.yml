# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  gh: circleci/github-cli@2.7.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-linux-debug:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Get Dependancies and Setup"
          command: |
            sudo apt-get update
            sudo apt-get install gcc-14 g++-14 ninja-build
            mkdir /tmp/linux-artifacts
      - run:
          name: "Build executable"
          command: |
            cmake -Bbuild -H. -DCMAKE_C_COMPILER=gcc-14 -DCMAKE_CXX_COMPILER=g++-14 -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release -G Ninja
            cd build
            ninja --verbose
            cd ..
            mv bin/lagrange-ng bin/lagrange-ng-linux-debug
            mv bin/lagrange-test bin/lagrange-test-linux-debug
      - persist_to_workspace:
          root: .
          paths:
            - bin/lagrange-ng-linux-static
            - bin/lagrange-test-linux-static
  build-linux-static:
    docker:
      - image: cimg/base:current

    steps:
      - checkout
      - run:
          name: "Get Dependancies and Setup"
          command: |
            sudo apt-get update
            sudo apt-get install gcc-14 g++-14 ninja-build
            mkdir /tmp/linux-artifacts
      - run:
          name: "Build executable"
          command: |
            cmake -Bbuild -H. -DCMAKE_C_COMPILER=gcc-14 -DCMAKE_CXX_COMPILER=g++-14 -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY_STATIC=ON -G Ninja
            cd build
            ninja --verbose
            cd ..
            mv bin/lagrange-ng bin/lagrange-ng-linux-static
            mv bin/lagrange-test bin/lagrange-test-linux-static
      - persist_to_workspace:
          root: .
          paths:
            - bin/lagrange-ng-linux-static
            - bin/lagrange-test-linux-static
  build-mac-static:
    macos:
      xcode: 16.4.0
    resource_class: m4pro.medium
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run:
          name: "Install Ninja"
          command: |
            brew install ninja
            mkdir /tmp/macos-artifacts
      - run:
          name: "Build Executable"
          command: |
            cmake -Bbuild -H. -DBUILD_TESTS=ON -G Ninja
            cd build
            ninja --verbose
            cd ..
            mv bin/lagrange-ng bin/lagrange-ng-macos-static
            mv bin/lagrange-test bin/lagrange-test-macos-static
      - persist_to_workspace:
          root: .
          paths:
            - bin/lagrange-ng-macos-static
            - bin/lagrange-test-macos-static
  run-tests:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - attach_workspace:
          at: artifacts
      - run:
          name: "Run linux tests"
          command: |
            ./artifacts/bin/lagrange-test-linux-debug

  run-tests-macos:
    macos:
      xcode: 16.4.0
    resource_class: m4pro.medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Run macos tests"
          command: |
            ./bin/lagrange-test-macos-static

  upload-release:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - gh/install
      - attach_workspace:
          at: artifacts
      - run:
          name: "Upload Release"
          command: |
            gh release upload << pipeline.git.tag >> ./artifacts/bin/lagrange-ng-linux-static
            # gh release upload << pipeline.git.tag >> ./linux-artifacts/lagrange-ng#lagrange-ng-macos-static



# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    jobs:
      - build-linux-debug
      - run-tests:
          requires:
            - build-linux-debug
      - build-linux-static:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - gh/release:
          tag: "<< pipeline.git.tag >>"
          title: "Release-test-ci-3"
          context:
            - GITHUB_TOKEN
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - upload-release:
          context:
            - GITHUB_TOKEN
          requires:
            - gh/release
            - build-linux-static
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
